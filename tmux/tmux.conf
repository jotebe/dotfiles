# bind-key -n	C-\				if-shell "$is_vim" "send-keys C-w p" "select-pane -l"
# bind-key -n	C-h				if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
# bind-key -n	C-j				if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
# bind-key -n	C-k				if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
# bind-key -n	C-l				if-shell "$is_vim" "send-keys C-w l" "select-pane -R"
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind-key	C-Space				send-prefix # ^Space twice sends ^Space to shell, for running nested sessions, etc.
bind-key	P				last-window
bind-key	c				new-window -c "#{pane_current_path}"
bind-key	h				select-pane -L
bind-key	j				select-pane -D
bind-key	k				select-pane -U
bind-key	l				select-pane -R
bind-key	s				split-window -c "#{pane_current_path}"
bind-key	v				split-window -h -c "#{pane_current_path}"
bind-key -n	C-Down				select-pane -D
bind-key -n	C-Left				select-pane -L
bind-key -n	C-Right				select-pane -R
bind-key -n	C-Up				select-pane -U
bind-key -n	WheelDownPane			select-pane -t= \; send-keys -M
bind-key -n	WheelUpPane			if-shell -t {mouse} -F "#{mouse_any_flag}" "send-keys -M" "if -t {mouse} -F '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind-key -r	C-h				previous-window
bind-key -r	C-l				next-window
set-option -g	base-index			1 # start window numbers at 1 to match keyboard order with tmux window order
set-option -g	detach-on-destroy		off
set-option -g	display-time			3000
set-option -g	history-limit			10000 # increase scrollback lines
set-option -g	message-command-style		'fg=black,bg=yellow'
set-option -g	message-style			'fg=black,bg=yellow'
set-option -g	prefix				C-Space # change prefix to ^space instead of ^b
set-option -g	renumber-windows		off # don't renumber windows sequentially after closing any of them
set-option -g	status-interval			5
set-option -g	status-left			"#{?client_prefix,#[bg=magenta]#[fg=black],}[#S]#[default] "
set-option -g	status-right			"#(loadavg | awk '{print $1}')x #[fg=green]#{=21:pane_title} #[fg=cyan]#H #[fg=red]%H:%M %d-%b"
set-option -g	status-right-length		60
set-option -g	status-style			'fg=#ffffff,bg=#111111'
set-option -g	visual-activity			on
set-option -g	visual-bell			off
set-option -g	visual-silence			on
set-option -s	focus-events on
set-option -s	terminal-overrides		'*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cs=\E]12;%p1%s\007:Cr=\E]112\007:Ss=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007' # some crazy shit I found online to try to fix the ZSH Vi-input-mode cursor style in iTerm
set-option -wg	aggressive-resize		on
set-option -wg	mode-keys			vi # use vi-style keys in copy and choice modes
set-option -wg	mouse				on
set-option -wg	pane-active-border-style	'bg=black,fg=red'
set-option -wg	pane-border-style		'bg=black,fg=#999999'
set-option -wg	status-keys			vi # use vi-style keys in status-line (command-prompt)
set-option -wg	window-status-current-style	'bg=#333333,fg=yellow'
set-option -wg	window-status-last-style	'fg=yellow'
unbind-key	C-Down
unbind-key	C-Left
unbind-key	C-Right
unbind-key	C-Up
unbind-key	C-b
